[tool.poetry]
name = "sample"
version = "0.0.0"
description = "sample"
authors = ["sample <no-reply@example.com>"]
readme = "README.md"
license = "Proprietary"
packages = [{ include = "sample", from = "src" }]
include = [{ path = "tests", format = "sdist" }]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = {extras = ["all"], version = "^0.105.0"}
requests = "^2.31.0"
sqlalchemy = "^2.0.23"
aiohttp = "^3.9.1"
opensearch-py = "^2.4.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.8"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.2"
pyright = "^1.1.340"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
    "F",
    "E",
    "W",
    "B",
    "N",
    "UP",
    "C90",
    "C4",
    "DTZ",
    "PIE",
    "PT",
    "Q",
    "SIM",
    "RUF",
    "I001"
]
ignore = ["E501", "B008", "N815", "F401", "F841"]
target-version = "py311"

[tool.pyright]
typeCheckingMode = "basic"
venvPath = "."
venv = ".venv"
executionEnvironments = [
    { root = "src" },
    { root = "test", extraPaths = [
        "src",
        ".",
    ] },
]
exclude = ["**/__pycache__", ".venv/**"]

[tool.pytest.ini_options]
pythonpath = "src ."
addopts = ["--import-mode=importlib"]
filterwarnings = "ignore::DeprecationWarning"

[tool.coverage.run]
concurrency = ['greenlet', 'thread']
source = ['sample']
omit = ['src/**/__main__.py']
